name: Build Rust Guard

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install mingw -y

      - name: Build Rust library
        run: |
          cd electron-client/native
          cargo build --release

      - name: Copy binary to artifact folder
        run: |
          mkdir -p artifact
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp electron-client/native/target/release/hwid_guard.dll artifact/
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            cp electron-client/native/target/release/libhwid_guard.dylib artifact/
          else
            cp electron-client/native/target/release/libhwid_guard.so artifact/
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hwid-guard-${{ matrix.os }}
          path: artifact/
